name: dagster-pipes-rust

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    paths:
      - "libraries/pipes/tests/dagster-pipes-tests/**"
      - "libraries/pipes/implementations/rust/**"
      - ".github/workflows/libraries-pipes-rust.yml"

defaults:
  run:
    working-directory: ./libraries/pipes/implementations/rust/

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUSTUP_MAX_RETRIES: 10

jobs:
  ci:
    name: "CI"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - name: rustfmt
        run: |
          nix develop .#rust --command \
            bash -c "cargo fmt --all --check"
      - name: test
        run: |
          nix develop .#rust --command \
            bash -c "cargo nextest run"
      - name: doctest
        run: |
          nix develop .#rust --command \
            bash -c "cargo test --doc"
      - name: pipes-tests
        run: |
          nix develop .#rust --command \
            uv run pytest

  integration:
    name: "integration"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./libraries/pipes/implementations/rust/example-dagster-pipes-rust-project
    steps:
      - uses: actions/checkout@v4

      - name: "Install uv"
        uses: astral-sh/setup-uv@v4

      - name: "Install Python"
        run: uv python install

      - name: "Install the project"
        run: uv sync --all-extras --dev

      - name: "Lint"
        run: uv run make ruff

      - name: "Tests"
        run: uv run pytest example_dagster_pipes_rust_project_tests
